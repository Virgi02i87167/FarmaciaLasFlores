@model FarmaciaLasFlores.Models.EditarVentaViewModel

<h2>Editar Venta</h2>

<div asp-validation-summary="ModelOnly" class="text-danger"></div>

<form asp-action="GuardarCambiosVenta" method="post">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.VentaId)

    <table class="table table-bordered table-striped table-hover shadow-sm" aria-label="Editar detalles de la venta">
        <thead class="table-light">
            <tr>
                <th scope="col">Nombre</th>
                <th scope="col">Cantidad</th>
                <th scope="col">Precio Venta</th>
                <th scope="col">Total</th>
            </tr>
        </thead>
        <tbody>
            @{
                decimal totalGeneral = 0;
            }
            @for (int i = 0; i < Model.Detalles.Count; i++)
            {
                var producto = Model.Detalles[i];
                var subtotal = producto.PrecioVenta * producto.Cantidad;
                totalGeneral += subtotal;
                <tr id="fila-@i">
                    <td>@producto.NombreProducto</td>
                    <td>
                        <input type="number" asp-for="Detalles[i].Cantidad" id="cantidad-@i" class="form-control cantidad-input" data-index="@i" min="1" />
                        <span asp-validation-for="Detalles[i].Cantidad" class="text-danger"></span>
                    </td>
                    <td>
                        @producto.PrecioVenta.ToString("0.00")
                        <input type="hidden" asp-for="Detalles[i].PrecioVenta" id="precio-@i" />
                        <input type="hidden" asp-for="Detalles[i].DetalleId" />
                    </td>
                    <td>
                        <span id="subtotal-@i">@subtotal.ToString("0.00")</span>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="3" class="text-end"><strong>Total a Pagar:</strong></td>
                <td><strong id="total-general">@totalGeneral.ToString("0.00")</strong></td>
            </tr>
        </tfoot>
    </table>

    <div class="d-flex justify-content-end gap-2 mt-3">
        <button type="submit" class="btn btn-success">Actualizar Venta</button>
        <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
    </div>
</form>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            function actualizarSubtotal(index) {
                var cantidadInput = document.getElementById('cantidad-' + index);
                var precioInput = document.getElementById('precio-' + index);
                var subtotalSpan = document.getElementById('subtotal-' + index);
                var cantidad = parseFloat(cantidadInput.value);
                var precio = parseFloat(precioInput.value);
                if (!isNaN(cantidad) && !isNaN(precio) && cantidad > 0) {
                    var subtotal = cantidad * precio;
                    subtotalSpan.textContent = subtotal.toFixed(2);
                } else {
                    subtotalSpan.textContent = '0.00';
                }
            }

            function actualizarTotalGeneral() {
                let total = 0;
                document.querySelectorAll('.cantidad-input').forEach(input => {
                    let index = input.dataset.index;
                    let cantidad = parseFloat(input.value);
                    let precio = parseFloat(document.getElementById('precio-' + index).value);
                    if (!isNaN(cantidad) && !isNaN(precio) && cantidad > 0) {
                        total += cantidad * precio;
                    }
                });
                document.getElementById('total-general').textContent = total.toFixed(2);
            }

            document.querySelectorAll('.cantidad-input').forEach(input => {
                input.addEventListener('input', () => {
                    let index = input.dataset.index;
                    actualizarSubtotal(index);
                    actualizarTotalGeneral();
                });
            });

            actualizarTotalGeneral(); // Ejecutar al cargar
        });
    </script>
}