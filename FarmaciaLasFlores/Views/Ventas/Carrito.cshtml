@model FarmaciaLasFlores.Models.VentasViewModel

@{
    ViewData["Title"] = "Carrito de Compras";
}

<h2 class="text-center mb-4">Carrito de Ventas</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (Model.ListaProductos.Any())
{
    <form method="post" asp-action="FinalizarVenta">
        <table class="table table-bordered table-striped table-hover shadow-sm">
            <thead class="table-light">
                <tr>
                    <th>Nombre</th>
                    <th>Cantidad</th>
                    <th>Precio</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var producto in Model.ListaProductos)
                {
                    <tr>
                        <td>@producto.Nombre</td>

                        <!-- Campo para seleccionar la cantidad -->
                        <td>
                            <input type="number" name="cantidad[@producto.Id]" value="@producto.Cantidad" min="1" class="form-control" />
                        </td>

                        <!-- Campo para definir el precio de venta -->
                        <td>
                            <input type="number" name="precioVenta[@producto.Id]" value="@producto.PrecioCompra" step="0.01" class="form-control" />
                        </td>

                        <!-- Mostrar el total calculado en C# con id único para cada producto -->
                        <td>
                            <span id="total-@producto.Id">@($"{producto.PrecioCompra * producto.Cantidad:0.00}")</span>

                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <button type="submit" class="btn btn-success w-100">Realizar Venta</button>
    </form>
}
else
{
    <p>No hay productos en el carrito.</p>
}

@section Scripts {
    <script>
        // Función para actualizar el total cuando cambian la cantidad o el precio
        function actualizarTotal(productoId) {
            // Obtener los valores de la cantidad y el precio
            var cantidad = document.querySelector('input[name="cantidad[' + productoId + ']"]').value;
            var precio = document.querySelector('input[name="precioVenta[' + productoId + ']"]').value;

            // Calcular el total
            var total = cantidad * precio;

            // Actualizar el campo de total correspondiente
            document.querySelector('#total-' + productoId).textContent = total.toFixed(2);
        }

        // Asignar eventos a los campos de cantidad y precio para recalcular el total cuando cambien
        document.querySelectorAll('input[name^="cantidad["]').forEach(input => {
            input.addEventListener('input', function () {
                var productoId = input.name.match(/\d+/)[0]; // Obtener el Id del producto
                actualizarTotal(productoId);
            });
        });

        document.querySelectorAll('input[name^="precioVenta["]').forEach(input => {
            input.addEventListener('input', function () {
                var productoId = input.name.match(/\d+/)[0]; // Obtener el Id del producto
                actualizarTotal(productoId);
            });
        });
    </script>
}



