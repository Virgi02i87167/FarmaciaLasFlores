@model FarmaciaLasFlores.Models.VentasViewModel

@{
    ViewData["Title"] = "Carrito de Compras";
}

<a asp-action="Details" class="btn btn-secondary">Agregar mas productos</a>

<h2 class="text-center mb-4">Carrito de Ventas</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (Model.ListaCarrito.Any())
{
    <form method="post" asp-action="FinalizarVenta">
        <table class="table table-bordered table-striped table-hover shadow-sm">
            <thead class="table-light">
                <tr>
                    <th>Nombre</th>
                    <th>Cantidad</th>
                    <th>Precio Venta</th>
                    <th>Total</th>
                    <th>Acción</th>
                </tr>
            </thead>
            <tbody>
                @{
                    decimal totalGeneral = 0;
                }
                @foreach (var producto in Model.ListaCarrito)
                {
                    var subtotal = producto.PrecioVenta * producto.Cantidad;
                    totalGeneral += subtotal;
                    <tr id="fila-@producto.ProductoId">
                        <td>@producto.Nombre</td>
                        <td>
                            <input type="number" name="cantidad[@producto.ProductoId]" value="@producto.Cantidad" min="1" class="form-control" />
                        </td>
                        <td>
                            @producto.PrecioVenta.ToString("0.00")
                            <input type="hidden" name="precioVenta[@producto.ProductoId]" value="@producto.PrecioVenta" />
                        </td>
                        <td>
                            <span id="total-@producto.ProductoId">@subtotal.ToString("0.00")</span>
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger btn-sm" onclick="eliminarProducto(@producto.ProductoId)">Eliminar Producto</button>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="3" class="text-end"><strong>Total a Pagar:</strong></td>
                    <td><strong id="total-general">@totalGeneral.ToString("0.00")</strong></td>
                    <td></td>
                </tr>
            </tfoot>
        </table>
        <button type="submit" class="btn btn-success w-100">Realizar Venta</button>
        <button type="button" class="btn btn-warning w-100 mt-2" onclick="limpiarCarrito()">Limpiar Carrito</button>
    </form>
}
else
{
    <p>No hay productos en el carrito.</p>
}

<div id="error-message" class="alert alert-danger" style="display: none;"></div> <!-- Mensaje de error -->
@section Scripts {
    <script>
        //Eliminar producto
            function eliminarProducto(productoId) {
                // Hacemos la solicitud POST con fetch
                fetch('/Ventas/EliminarDelCarritos', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() // Si usas CSRF
                    },
                    body: JSON.stringify({ productoId: productoId }) // Enviamos el productoId
                })
                .then(response => {
                    if (response.ok) {
                        // Si la eliminación fue exitosa, recargamos la página
                        window.location.reload();  // Recarga la página para que el producto eliminado ya no esté en el carrito
                    } else {
                        alert('Hubo un problema al eliminar el producto.');
                    }
                })
                .catch(error => {
                    console.error('Error al eliminar producto:', error);
                    alert('Hubo un error al procesar la solicitud.');
                });
            }

                function limpiarCarrito() {
            fetch('/Ventas/LimpiarCarrito', {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload(); // recarga para actualizar vista
                } else {
                    alert('No se pudo limpiar el carrito.');
                }
            })
            .catch(error => {
                console.error('Error al limpiar carrito:', error);
                alert('Ocurrió un error al limpiar el carrito.');
            });
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Función para actualizar el total de un producto individual
            function actualizarTotalProducto(productoId) {
                var cantidad = document.querySelector('input[name="cantidad[' + productoId + ']"]').value;
                var precio = document.querySelector('input[name="precioVenta[' + productoId + ']"]').value;

                var total = cantidad * precio;
                document.querySelector('#total-' + productoId).textContent = total.toFixed(2);
                actualizarTotalGeneral(); // También actualizamos el total general
            }

            // Función para actualizar el total general del carrito
            function actualizarTotalGeneral() {
                var totalGeneral = 0;

                document.querySelectorAll('input[name^="cantidad["]').forEach(input => {
                    var productoId = input.name.match(/\d+/)[0];
                    var cantidad = parseFloat(input.value);
                    var precio = parseFloat(document.querySelector('input[name="precioVenta[' + productoId + ']"]').value);

                    if (!isNaN(cantidad) && !isNaN(precio)) {
                        totalGeneral += cantidad * precio;
                    }
                });

                var totalGeneralElement = document.querySelector('#total-general');
                if (totalGeneralElement) {
                    totalGeneralElement.textContent = totalGeneral.toFixed(2);
                }
            }

            // Asignar eventos a los campos de cantidad
            document.querySelectorAll('input[name^="cantidad["]').forEach(input => {
                input.addEventListener('input', function () {
                    var productoId = input.name.match(/\d+/)[0];
                    actualizarTotalProducto(productoId);
                });
            });

            // Inicializar el total general al cargar la página
            actualizarTotalGeneral();
        });
    </script>
}

